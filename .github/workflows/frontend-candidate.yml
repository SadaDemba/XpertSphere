name: Candidate App CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - "src/frontend/packages/candidate-app/**"
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  REGISTRY: acrxpertspheredev.azurecr.io
  IMAGE_NAME: candidate-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Azure
        if: github.event_name != 'pull_request'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push
        run: |
          docker build \
            --build-arg ${{ secrets.VITE_API_BASE_URL }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            -f docker/candidate-app/Dockerfile .

          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # OPTIMIZATION : auto remove of old images
      - name: Cleanup old images
        if: github.ref == 'refs/heads/main'
        run: |

          TAGS_TO_DELETE=$(az acr repository show-tags \
            --name acrxpertspheredev \
            --repository ${{ env.IMAGE_NAME }} \
            --orderby time_desc \
            --output tsv | tail -n +4)

          for TAG in $TAGS_TO_DELETE; do
            if [ "$TAG" != "latest" ] && [ "$TAG" != "${{ github.sha }}" ]; then
              echo "Deleting tag: $TAG"
              az acr repository delete \
                --name acrxpertspheredev \
                --repository ${{ env.IMAGE_NAME }} \
                --tag $TAG \
                --yes || true
            fi
          done
