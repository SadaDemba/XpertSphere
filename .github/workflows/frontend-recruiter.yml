name: Recruiter App CI

on:
  push:
    branches: [main, develop]
    paths:
      - "src/frontend/packages/recruiter-app/**"
      - "src/frontend/package*.json"
      - "src/frontend/eslint.config.mjs"
      - "src/frontend/.prettierrc"
  pull_request:
    branches: [main, develop]
    paths:
      - "src/frontend/packages/recruiter-app/**"
      - "src/frontend/package*.json"
      - "src/frontend/eslint.config.mjs"
      - "src/frontend/.prettierrc"
  workflow_dispatch:

env:
  REGISTRY: acrxpertspheredev.azurecr.io
  IMAGE_NAME: recruiter-app

jobs:
  # ✅ Job de validation pour les PR (rapide, pas de build Docker)
  validate:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "src/frontend/package-lock.json"

      - name: Install dependencies (monorepo)
        working-directory: src/frontend
        run: npm ci

      - name: Format check
        working-directory: src/frontend
        run: npm run format:check

      - name: Lint (all workspaces)
        working-directory: src/frontend
        run: npm run lint

      - name: Test (all workspaces)
        working-directory: src/frontend
        run: npm run test

      - name: Build check (recruiter-app only)
        working-directory: src/frontend
        run: npm run build:recruiter

  # ✅ Job de build et push seulement pour main/develop
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push
        run: |
          # Determine environment and add suffix based on branch
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            APP_ENV="production"
            ENV_SUFFIX="/prod"
          else
            APP_ENV="staging"
            ENV_SUFFIX="/staging"
          fi

          # Build URL with environment suffix
          WEB_API_URL="${{ secrets.VITE_WEB_API_BASE_URL }}${ENV_SUFFIX}"

          docker build \
            --build-arg VITE_APP_ENV=$APP_ENV \
            --build-arg VITE_AUTH_MODE=jwt \
            --build-arg VITE_WEB_API_BASE_URL=$WEB_API_URL \
            --build-arg VITE_APIM_SUBSCRIPTION_KEY=${{ secrets.VITE_APIM_SUBSCRIPTION_KEY }} \
            --build-arg VITE_APP_VERSION=1.0.0 \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            -f docker/recruiter-app/Dockerfile .

          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
